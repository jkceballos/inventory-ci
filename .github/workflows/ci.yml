name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: inv
          POSTGRES_USER: invuser
          POSTGRES_PASSWORD: invpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Build backend image for testing
    - name: Build backend test image
      run: docker build -f backend/Dockerfile.test -t backend:ci ./backend

    # Run backend tests with coverage
    - name: Run backend tests
      run: docker run \
        --env PYTHONPATH=/app \
        --env POSTGRES_DB=inv \
        --env POSTGRES_USER=invuser \
        --env POSTGRES_PASSWORD=invpass \
        --env DB_HOST=host.docker.internal \
        -v ${{ github.workspace }}/backend:/app \
        backend:ci

    # Subir a Codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: backend/coverage.xml
        fail_ci_if_error: true

    # Build frontend
    - name: Build frontend image
      run: docker build -t frontend:ci ./frontend

    # Test simple del frontend
    - name: Run frontend tests
      run: docker run -v /var/run/docker.sock:/var/run/docker.sock frontend:ci bash ./tests/test_frontend.sh
